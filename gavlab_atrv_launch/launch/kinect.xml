<launch>
  <!-- Nodelet Manager -->
  <node pkg="nodelet" type="nodelet" name="openni_manager" output="screen" respawn="true" args="manager"/>

  <!-- Openni Nodelet -->
  <node pkg="nodelet" type="nodelet" name="openni_camera" args="load openni_camera/OpenNINodelet openni_manager" respawn="true">
    <param name="rgb_frame_id" value="/openni_rgb_optical_frame" />
    <param name="depth_frame_id" value="/openni_depth_optical_frame" />
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="2" />
    <param name="depth_mode" value="2" />
    <param name="debayering" value="2" />
    <param name="depth_time_offset" value="0" />
    <param name="image_time_offset" value="0" />

    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
  </node>

  <!-- PointCloud2 Throttling Nodelet -->
  <node pkg="nodelet" type="nodelet" name="throttle_pointcloud" args="load throttle_pointcloud/CloudThrottle openni_manager" respawn="true">
    <param name="divisor" value="4"/>
    <remap from="cloud_in" to="/camera/depth/points"/>
    <remap from="cloud_out" to="/cloud_throttled"/>
    <!-- <remap from="camera_in" to="/camera/rgb/image_color"/> -->
    <!-- <remap from="camera_out" to="/image_color_throttled"/> -->
  </node>

  <!-- Static Transforms (For running without urdf) -->
  <include file="$(find openni_camera)/launch/kinect_frames.launch"/>
</launch>